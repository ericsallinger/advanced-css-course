/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/* universal selector applies to all elements */
*,
*::after,
*::before {
    margin:0;
    padding:0;
    box-sizing: inherit;
}

html {
    font-size: 62.5%; /* counting on a browser default font size of 16px so 10/16=.625*/
    /* this way 1rem = 10px which makes our lives easier */
}

body {
    font-family: "Lato", sans-serif; 
    font-weight: 400;
    font-size: 1.6rem;
    line-height: 1.7;
    color: #777;
    padding: 3rem;
    box-sizing: border-box; /* very important - makes it so height and width include padding and margin, 
                            rather than having those added on to the defined values */
}

.header {
    /* viewport height is vh */
    height: 95vh;
    background-image: linear-gradient(
        to right top, 
        #7ed56fce,
        #28b485c5),
    url(../img/hero.jpg);
    background-size: cover;
    background-position: top;
    clip-path: polygon(0 0,100% 0,100% 75vh,0 100%);
    position: relative;
}

.header__logo-box {
    position: absolute;
    top:4rem;
    left:4rem;
}

.header__logo {
    height:3.5rem;
    width: auto;
}

/* to center a div within a relative parent element */
.header__text-box {
    position: absolute;
    text-align: center; /* inline elements are treated as text and can be centered as such */ 
    top: 40%;
    left: 50%;
    transform: translate(-50%,-50%);
}

.heading-primary {
    color: #FFF;
    text-transform: uppercase;
    backface-visibility: hidden;
    margin-bottom: 6rem;
}

.heading-primary--main {
    display:block;
    font-size: 6rem;    
    font-weight: 400;
    letter-spacing: 3.5rem;

    animation-name: moveInLeft;
    animation-delay: .5s;
    animation-duration: 1s;
    animation-timing-function: ease-out;
}

.heading-primary--sub {
    display:block;
    font-size: 2rem;    
    font-weight: 700;
    letter-spacing: 1.75rem;

    animation: moveInRight 1s .5s ease-out;
}

@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform:translateX(-10rem);
    }
    80% {
        transform:translateX(1rem);
    }
    100% {
        opacity: 1;
        transform:translateX(0);
    }
}

@keyframes moveInRight {
    0% {
        opacity: 0;
        transform:translateX(10rem)
    }
    80% {
        transform:translateX(-1rem)
    }
    100% {
        opacity: 1;
        transform:translateX(0)
    }
}

.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 1.5rem 4rem;
    display: inline-block; /* choose this display rather than inline if you want to add padding etc. */
    border-radius: 10rem; /* giving a huge number will just make the element corners a circle */
    transition: all .2s;
    position: relative;
}

.btn--white {
    background-color: #FFF;
    color: #777;
}

.btn:hover {
    transform: translateY(-0.3rem);
    box-shadow: 0 1rem 2rem rgba(0,0,0,.2); /* x shadow, y shadow, blur, color*/
}

.btn:active {
    transform: translateY(-0.1rem);
    box-shadow: 0 0.5rem 1rem rgba(0,0,0,.2);
}
/* 
.btn::after{
    content: "";
    display: inline-block;
    height: 100%;
    width: 100%;
    border-radius: 100px;
    position: absolute;  positions to the first relative parent elemetn it can find 
    top: 0;
    left: 0;
    z-index: -1;
    transition: all .4s;

}

.btn-white::after{
    background-color: #FFF;
} */

/* .btn:hover::after{
    transform: scaleX(1.3) scaleY(1.7);
    opacity: 0;
    /* to animate put the transition state on the initial elemtent css (.btn::after)
} */